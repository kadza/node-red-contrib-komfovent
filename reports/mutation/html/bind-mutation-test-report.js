document.querySelector('mutation-test-report-app').report = {"files":{"/Users/kristian/code/node-red-contrib-komfovent/komfnodes/komfovent.js":{"language":"javascript","mutants":[{"id":"1","location":{"end":{"column":6,"line":23},"start":{"column":18,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"0","location":{"end":{"column":4,"line":24},"start":{"column":18,"line":14}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"5","location":{"end":{"column":23,"line":19},"start":{"column":18,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"4","location":{"end":{"column":20,"line":18},"start":{"column":13,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2","location":{"end":{"column":18,"line":16},"start":{"column":13,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"3","location":{"end":{"column":18,"line":17},"start":{"column":13,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"8","location":{"end":{"column":21,"line":22},"start":{"column":16,"line":22}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"13","location":{"end":{"column":65,"line":39},"start":{"column":11,"line":39}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"15","location":{"end":{"column":65,"line":39},"start":{"column":11,"line":39}},"mutatorName":"BinaryExpression","replacement":"err.errno === 'ENOTFOUND' && err.errno === 'EHOSTDOWN'","status":"Survived"},{"id":"14","location":{"end":{"column":65,"line":39},"start":{"column":11,"line":39}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"7","location":{"end":{"column":23,"line":21},"start":{"column":18,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"16","location":{"end":{"column":36,"line":39},"start":{"column":11,"line":39}},"mutatorName":"BinaryExpression","replacement":"err.errno !== 'ENOTFOUND'","status":"Survived"},{"id":"6","location":{"end":{"column":19,"line":20},"start":{"column":14,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"17","location":{"end":{"column":36,"line":39},"start":{"column":11,"line":39}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"19","location":{"end":{"column":36,"line":39},"start":{"column":25,"line":39}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"18","location":{"end":{"column":36,"line":39},"start":{"column":11,"line":39}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"20","location":{"end":{"column":65,"line":39},"start":{"column":40,"line":39}},"mutatorName":"BinaryExpression","replacement":"err.errno !== 'EHOSTDOWN'","status":"Survived"},{"id":"21","location":{"end":{"column":65,"line":39},"start":{"column":40,"line":39}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"25","location":{"end":{"column":44,"line":40},"start":{"column":16,"line":40}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"26","location":{"end":{"column":29,"line":40},"start":{"column":25,"line":40}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"23","location":{"end":{"column":65,"line":39},"start":{"column":54,"line":39}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"22","location":{"end":{"column":65,"line":39},"start":{"column":40,"line":39}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"24","location":{"end":{"column":8,"line":41},"start":{"column":67,"line":39}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"27","location":{"end":{"column":8,"line":44},"start":{"column":12,"line":42}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"28","location":{"end":{"column":44,"line":43},"start":{"column":16,"line":43}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"29","location":{"end":{"column":29,"line":43},"start":{"column":25,"line":43}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"Survived"},{"id":"12","location":{"end":{"column":6,"line":45},"start":{"column":17,"line":38}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"34","location":{"end":{"column":82,"line":57},"start":{"column":9,"line":57}},"mutatorName":"BinaryExpression","replacement":"(typeof username !== 'string' || !username) && typeof password !== 'string'","status":"Survived"},{"id":"33","location":{"end":{"column":95,"line":57},"start":{"column":9,"line":57}},"mutatorName":"BinaryExpression","replacement":"(typeof username !== 'string' || !username || typeof password !== 'string') && !password","status":"Survived"},{"id":"31","location":{"end":{"column":95,"line":57},"start":{"column":9,"line":57}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"9","location":{"end":{"column":4,"line":46},"start":{"column":34,"line":31}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"35","location":{"end":{"column":82,"line":57},"start":{"column":9,"line":57}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"37","location":{"end":{"column":50,"line":57},"start":{"column":9,"line":57}},"mutatorName":"BinaryExpression","replacement":"typeof username !== 'string' && !username","status":"Survived"},{"id":"10","location":{"end":{"column":36,"line":33},"start":{"column":29,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"11","location":{"end":{"column":6,"line":37},"start":{"column":9,"line":34}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"38","location":{"end":{"column":50,"line":57},"start":{"column":9,"line":57}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"30","location":{"end":{"column":4,"line":84},"start":{"column":40,"line":55}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"32","location":{"end":{"column":95,"line":57},"start":{"column":9,"line":57}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"41","location":{"end":{"column":37,"line":57},"start":{"column":9,"line":57}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"46","location":{"end":{"column":82,"line":57},"start":{"column":54,"line":57}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"36","location":{"end":{"column":82,"line":57},"start":{"column":9,"line":57}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"39","location":{"end":{"column":50,"line":57},"start":{"column":9,"line":57}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"40","location":{"end":{"column":37,"line":57},"start":{"column":9,"line":57}},"mutatorName":"BinaryExpression","replacement":"typeof username === 'string'","status":"Killed"},{"id":"42","location":{"end":{"column":37,"line":57},"start":{"column":9,"line":57}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"51","location":{"end":{"column":84,"line":58},"start":{"column":15,"line":58}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"52","location":{"end":{"column":28,"line":58},"start":{"column":24,"line":58}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"53","location":{"end":{"column":82,"line":58},"start":{"column":38,"line":58}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"43","location":{"end":{"column":37,"line":57},"start":{"column":29,"line":57}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"50","location":{"end":{"column":6,"line":59},"start":{"column":97,"line":57}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"44","location":{"end":{"column":50,"line":57},"start":{"column":41,"line":57}},"mutatorName":"PrefixUnaryExpression","replacement":"username","status":"Killed"},{"id":"45","location":{"end":{"column":82,"line":57},"start":{"column":54,"line":57}},"mutatorName":"BinaryExpression","replacement":"typeof password === 'string'","status":"Killed"},{"id":"54","location":{"end":{"column":38,"line":60},"start":{"column":9,"line":60}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"56","location":{"end":{"column":38,"line":60},"start":{"column":9,"line":60}},"mutatorName":"BinaryExpression","replacement":"typeof ip !== 'string' && !ip","status":"Survived"},{"id":"58","location":{"end":{"column":31,"line":60},"start":{"column":9,"line":60}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"47","location":{"end":{"column":82,"line":57},"start":{"column":54,"line":57}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"48","location":{"end":{"column":82,"line":57},"start":{"column":74,"line":57}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"63","location":{"end":{"column":69,"line":61},"start":{"column":15,"line":61}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"64","location":{"end":{"column":28,"line":61},"start":{"column":24,"line":61}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"65","location":{"end":{"column":67,"line":61},"start":{"column":38,"line":61}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"62","location":{"end":{"column":6,"line":62},"start":{"column":40,"line":60}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"49","location":{"end":{"column":95,"line":57},"start":{"column":86,"line":57}},"mutatorName":"PrefixUnaryExpression","replacement":"password","status":"Killed"},{"id":"55","location":{"end":{"column":38,"line":60},"start":{"column":9,"line":60}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"57","location":{"end":{"column":31,"line":60},"start":{"column":9,"line":60}},"mutatorName":"BinaryExpression","replacement":"typeof ip === 'string'","status":"Killed"},{"id":"59","location":{"end":{"column":31,"line":60},"start":{"column":9,"line":60}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"69","location":{"end":{"column":21,"line":65},"start":{"column":15,"line":65}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"60","location":{"end":{"column":31,"line":60},"start":{"column":23,"line":60}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"61","location":{"end":{"column":38,"line":60},"start":{"column":35,"line":60}},"mutatorName":"PrefixUnaryExpression","replacement":"ip","status":"Killed"},{"id":"70","location":{"end":{"column":52,"line":66},"start":{"column":13,"line":66}},"mutatorName":"BinaryExpression","replacement":"'1=' + username + '&' + '2=' - password","status":"Survived"},{"id":"71","location":{"end":{"column":41,"line":66},"start":{"column":13,"line":66}},"mutatorName":"BinaryExpression","replacement":"'1=' + username + '&' - '2='","status":"Survived"},{"id":"72","location":{"end":{"column":34,"line":66},"start":{"column":13,"line":66}},"mutatorName":"BinaryExpression","replacement":"'1=' + username - '&'","status":"Survived"},{"id":"66","location":{"end":{"column":6,"line":67},"start":{"column":24,"line":63}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"73","location":{"end":{"column":28,"line":66},"start":{"column":13,"line":66}},"mutatorName":"BinaryExpression","replacement":"'1=' - username","status":"Survived"},{"id":"75","location":{"end":{"column":34,"line":66},"start":{"column":31,"line":66}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"67","location":{"end":{"column":26,"line":64},"start":{"column":12,"line":64}},"mutatorName":"BinaryExpression","replacement":"'http://' - ip","status":"Killed"},{"id":"74","location":{"end":{"column":17,"line":66},"start":{"column":13,"line":66}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"76","location":{"end":{"column":41,"line":66},"start":{"column":37,"line":66}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"77","location":{"end":{"column":48,"line":70},"start":{"column":9,"line":70}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"68","location":{"end":{"column":21,"line":64},"start":{"column":12,"line":64}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"79","location":{"end":{"column":48,"line":70},"start":{"column":9,"line":70}},"mutatorName":"BinaryExpression","replacement":"result === 'undefined' && result === ''","status":"Survived"},{"id":"81","location":{"end":{"column":31,"line":70},"start":{"column":9,"line":70}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"83","location":{"end":{"column":31,"line":70},"start":{"column":20,"line":70}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"85","location":{"end":{"column":48,"line":70},"start":{"column":35,"line":70}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"89","location":{"end":{"column":60,"line":71},"start":{"column":14,"line":71}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"90","location":{"end":{"column":27,"line":71},"start":{"column":23,"line":71}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"91","location":{"end":{"column":58,"line":71},"start":{"column":37,"line":71}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"87","location":{"end":{"column":48,"line":70},"start":{"column":46,"line":70}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"88","location":{"end":{"column":6,"line":72},"start":{"column":50,"line":70}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"92","location":{"end":{"column":84,"line":73},"start":{"column":14,"line":73}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"94","location":{"end":{"column":84,"line":73},"start":{"column":14,"line":73}},"mutatorName":"BinaryExpression","replacement":"result.data.indexOf('Incorrect password!') >= 0 && result.status > 200","status":"Survived"},{"id":"78","location":{"end":{"column":48,"line":70},"start":{"column":9,"line":70}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"95","location":{"end":{"column":61,"line":73},"start":{"column":14,"line":73}},"mutatorName":"BinaryExpression","replacement":"result.data.indexOf('Incorrect password!') > 0","status":"Survived"},{"id":"80","location":{"end":{"column":31,"line":70},"start":{"column":9,"line":70}},"mutatorName":"BinaryExpression","replacement":"result !== 'undefined'","status":"Killed"},{"id":"82","location":{"end":{"column":31,"line":70},"start":{"column":9,"line":70}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"84","location":{"end":{"column":48,"line":70},"start":{"column":35,"line":70}},"mutatorName":"BinaryExpression","replacement":"result !== ''","status":"Killed"},{"id":"97","location":{"end":{"column":61,"line":73},"start":{"column":14,"line":73}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"86","location":{"end":{"column":48,"line":70},"start":{"column":35,"line":70}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"102","location":{"end":{"column":84,"line":73},"start":{"column":65,"line":73}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"93","location":{"end":{"column":84,"line":73},"start":{"column":14,"line":73}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"105","location":{"end":{"column":64,"line":74},"start":{"column":14,"line":74}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"106","location":{"end":{"column":27,"line":74},"start":{"column":23,"line":74}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"107","location":{"end":{"column":62,"line":74},"start":{"column":37,"line":74}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"104","location":{"end":{"column":6,"line":75},"start":{"column":86,"line":73}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"96","location":{"end":{"column":61,"line":73},"start":{"column":14,"line":73}},"mutatorName":"BinaryExpression","replacement":"result.data.indexOf('Incorrect password!') < 0","status":"Killed"},{"id":"109","location":{"end":{"column":80,"line":76},"start":{"column":14,"line":76}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"98","location":{"end":{"column":61,"line":73},"start":{"column":14,"line":73}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"99","location":{"end":{"column":55,"line":73},"start":{"column":34,"line":73}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"100","location":{"end":{"column":84,"line":73},"start":{"column":65,"line":73}},"mutatorName":"BinaryExpression","replacement":"result.status >= 200","status":"Killed"},{"id":"110","location":{"end":{"column":80,"line":76},"start":{"column":14,"line":76}},"mutatorName":"BinaryExpression","replacement":"result.data.indexOf('value=\"Logout') >= 0 || result.status === 200","status":"Survived"},{"id":"101","location":{"end":{"column":84,"line":73},"start":{"column":65,"line":73}},"mutatorName":"BinaryExpression","replacement":"result.status <= 200","status":"Killed"},{"id":"111","location":{"end":{"column":55,"line":76},"start":{"column":14,"line":76}},"mutatorName":"BinaryExpression","replacement":"result.data.indexOf('value=\"Logout') > 0","status":"Survived"},{"id":"103","location":{"end":{"column":84,"line":73},"start":{"column":65,"line":73}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"114","location":{"end":{"column":55,"line":76},"start":{"column":14,"line":76}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"115","location":{"end":{"column":49,"line":76},"start":{"column":34,"line":76}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"118","location":{"end":{"column":80,"line":76},"start":{"column":59,"line":76}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"108","location":{"end":{"column":80,"line":76},"start":{"column":14,"line":76}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"112","location":{"end":{"column":55,"line":76},"start":{"column":14,"line":76}},"mutatorName":"BinaryExpression","replacement":"result.data.indexOf('value=\"Logout') < 0","status":"Killed"},{"id":"113","location":{"end":{"column":55,"line":76},"start":{"column":14,"line":76}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"124","location":{"end":{"column":86,"line":82},"start":{"column":14,"line":82}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"125","location":{"end":{"column":27,"line":82},"start":{"column":23,"line":82}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"126","location":{"end":{"column":84,"line":82},"start":{"column":37,"line":82}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"116","location":{"end":{"column":80,"line":76},"start":{"column":59,"line":76}},"mutatorName":"BinaryExpression","replacement":"result.status !== 200","status":"Killed"},{"id":"117","location":{"end":{"column":80,"line":76},"start":{"column":59,"line":76}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"123","location":{"end":{"column":6,"line":83},"start":{"column":10,"line":80}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"119","location":{"end":{"column":6,"line":79},"start":{"column":82,"line":76}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"120","location":{"end":{"column":51,"line":78},"start":{"column":14,"line":78}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"128","location":{"end":{"column":47,"line":94},"start":{"column":9,"line":94}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"121","location":{"end":{"column":28,"line":78},"start":{"column":23,"line":78}},"mutatorName":"BooleanSubstitution","replacement":"true","status":"Killed"},{"id":"130","location":{"end":{"column":47,"line":94},"start":{"column":9,"line":94}},"mutatorName":"BinaryExpression","replacement":"typeof mode.code !== 'string' && !mode","status":"Survived"},{"id":"122","location":{"end":{"column":49,"line":78},"start":{"column":38,"line":78}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"132","location":{"end":{"column":38,"line":94},"start":{"column":9,"line":94}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"137","location":{"end":{"column":71,"line":95},"start":{"column":15,"line":95}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"138","location":{"end":{"column":28,"line":95},"start":{"column":24,"line":95}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"139","location":{"end":{"column":69,"line":95},"start":{"column":38,"line":95}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"136","location":{"end":{"column":6,"line":96},"start":{"column":49,"line":94}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"140","location":{"end":{"column":38,"line":97},"start":{"column":9,"line":97}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"127","location":{"end":{"column":4,"line":115},"start":{"column":28,"line":92}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"142","location":{"end":{"column":38,"line":97},"start":{"column":9,"line":97}},"mutatorName":"BinaryExpression","replacement":"typeof ip !== 'string' && !ip","status":"Survived"},{"id":"129","location":{"end":{"column":47,"line":94},"start":{"column":9,"line":94}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"131","location":{"end":{"column":38,"line":94},"start":{"column":9,"line":94}},"mutatorName":"BinaryExpression","replacement":"typeof mode.code === 'string'","status":"Killed"},{"id":"133","location":{"end":{"column":38,"line":94},"start":{"column":9,"line":94}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"144","location":{"end":{"column":31,"line":97},"start":{"column":9,"line":97}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"134","location":{"end":{"column":38,"line":94},"start":{"column":30,"line":94}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"149","location":{"end":{"column":69,"line":98},"start":{"column":15,"line":98}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"150","location":{"end":{"column":28,"line":98},"start":{"column":24,"line":98}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"151","location":{"end":{"column":67,"line":98},"start":{"column":38,"line":98}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"135","location":{"end":{"column":47,"line":94},"start":{"column":42,"line":94}},"mutatorName":"PrefixUnaryExpression","replacement":"mode","status":"Killed"},{"id":"148","location":{"end":{"column":6,"line":99},"start":{"column":40,"line":97}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"141","location":{"end":{"column":38,"line":97},"start":{"column":9,"line":97}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"143","location":{"end":{"column":31,"line":97},"start":{"column":9,"line":97}},"mutatorName":"BinaryExpression","replacement":"typeof ip === 'string'","status":"Killed"},{"id":"156","location":{"end":{"column":40,"line":102},"start":{"column":29,"line":102}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"145","location":{"end":{"column":31,"line":97},"start":{"column":9,"line":97}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"146","location":{"end":{"column":31,"line":97},"start":{"column":23,"line":97}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"147","location":{"end":{"column":38,"line":97},"start":{"column":35,"line":97}},"mutatorName":"PrefixUnaryExpression","replacement":"ip","status":"Killed"},{"id":"153","location":{"end":{"column":40,"line":102},"start":{"column":12,"line":102}},"mutatorName":"BinaryExpression","replacement":"'http://' + ip - '/ajax.xml'","status":"Killed"},{"id":"152","location":{"end":{"column":6,"line":105},"start":{"column":24,"line":101}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"159","location":{"end":{"column":63,"line":108},"start":{"column":9,"line":108}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"160","location":{"end":{"column":63,"line":108},"start":{"column":9,"line":108}},"mutatorName":"BinaryExpression","replacement":"result.status === 200 || result.data.indexOf('c6') > 0","status":"Survived"},{"id":"154","location":{"end":{"column":26,"line":102},"start":{"column":12,"line":102}},"mutatorName":"BinaryExpression","replacement":"'http://' - ip","status":"Killed"},{"id":"155","location":{"end":{"column":21,"line":102},"start":{"column":12,"line":102}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"163","location":{"end":{"column":30,"line":108},"start":{"column":9,"line":108}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"164","location":{"end":{"column":63,"line":108},"start":{"column":34,"line":108}},"mutatorName":"BinaryExpression","replacement":"result.data.indexOf('c6') >= 0","status":"Survived"},{"id":"157","location":{"end":{"column":21,"line":103},"start":{"column":15,"line":103}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"167","location":{"end":{"column":63,"line":108},"start":{"column":34,"line":108}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"158","location":{"end":{"column":63,"line":108},"start":{"column":9,"line":108}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"161","location":{"end":{"column":30,"line":108},"start":{"column":9,"line":108}},"mutatorName":"BinaryExpression","replacement":"result.status !== 200","status":"Killed"},{"id":"162","location":{"end":{"column":30,"line":108},"start":{"column":9,"line":108}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"173","location":{"end":{"column":87,"line":113},"start":{"column":14,"line":113}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"174","location":{"end":{"column":27,"line":113},"start":{"column":23,"line":113}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"175","location":{"end":{"column":85,"line":113},"start":{"column":37,"line":113}},"mutatorName":"BinaryExpression","replacement":"'Could not set mode. Non existing? ' - mode.name","status":"NoCoverage"},{"id":"176","location":{"end":{"column":73,"line":113},"start":{"column":37,"line":113}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"165","location":{"end":{"column":63,"line":108},"start":{"column":34,"line":108}},"mutatorName":"BinaryExpression","replacement":"result.data.indexOf('c6') <= 0","status":"Killed"},{"id":"178","location":{"end":{"column":38,"line":119},"start":{"column":9,"line":119}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"179","location":{"end":{"column":38,"line":119},"start":{"column":9,"line":119}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"180","location":{"end":{"column":38,"line":119},"start":{"column":9,"line":119}},"mutatorName":"BinaryExpression","replacement":"typeof ip !== 'string' && !ip","status":"Survived"},{"id":"181","location":{"end":{"column":31,"line":119},"start":{"column":9,"line":119}},"mutatorName":"BinaryExpression","replacement":"typeof ip === 'string'","status":"Survived"},{"id":"182","location":{"end":{"column":31,"line":119},"start":{"column":9,"line":119}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"183","location":{"end":{"column":31,"line":119},"start":{"column":9,"line":119}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"172","location":{"end":{"column":6,"line":114},"start":{"column":10,"line":112}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"184","location":{"end":{"column":31,"line":119},"start":{"column":23,"line":119}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"166","location":{"end":{"column":63,"line":108},"start":{"column":34,"line":108}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"187","location":{"end":{"column":69,"line":120},"start":{"column":15,"line":120}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"188","location":{"end":{"column":28,"line":120},"start":{"column":24,"line":120}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"189","location":{"end":{"column":67,"line":120},"start":{"column":38,"line":120}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"177","location":{"end":{"column":4,"line":137},"start":{"column":22,"line":118}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"186","location":{"end":{"column":6,"line":121},"start":{"column":40,"line":119}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"185","location":{"end":{"column":38,"line":119},"start":{"column":35,"line":119}},"mutatorName":"PrefixUnaryExpression","replacement":"ip","status":"Survived"},{"id":"192","location":{"end":{"column":46,"line":124},"start":{"column":33,"line":124}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"191","location":{"end":{"column":48,"line":123},"start":{"column":42,"line":123}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"193","location":{"end":{"column":68,"line":124},"start":{"column":53,"line":124}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"190","location":{"end":{"column":6,"line":133},"start":{"column":9,"line":122}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"194","location":{"end":{"column":73,"line":124},"start":{"column":70,"line":124}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"196","location":{"end":{"column":57,"line":126},"start":{"column":11,"line":126}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"195","location":{"end":{"column":57,"line":126},"start":{"column":11,"line":126}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"198","location":{"end":{"column":43,"line":126},"start":{"column":11,"line":126}},"mutatorName":"BinaryExpression","replacement":"typeof msgResult !== 'undefined'","status":"Survived"},{"id":"197","location":{"end":{"column":57,"line":126},"start":{"column":11,"line":126}},"mutatorName":"BinaryExpression","replacement":"typeof msgResult === 'undefined' && !msgResult","status":"Survived"},{"id":"199","location":{"end":{"column":43,"line":126},"start":{"column":11,"line":126}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"201","location":{"end":{"column":43,"line":126},"start":{"column":32,"line":126}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"204","location":{"end":{"column":74,"line":127},"start":{"column":16,"line":127}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"205","location":{"end":{"column":29,"line":127},"start":{"column":25,"line":127}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"206","location":{"end":{"column":62,"line":127},"start":{"column":39,"line":127}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"200","location":{"end":{"column":43,"line":126},"start":{"column":11,"line":126}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"203","location":{"end":{"column":8,"line":128},"start":{"column":59,"line":126}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"202","location":{"end":{"column":57,"line":126},"start":{"column":47,"line":126}},"mutatorName":"PrefixUnaryExpression","replacement":"msgResult","status":"Survived"},{"id":"207","location":{"end":{"column":8,"line":132},"start":{"column":12,"line":129}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"211","location":{"end":{"column":80,"line":135},"start":{"column":14,"line":135}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"212","location":{"end":{"column":27,"line":135},"start":{"column":23,"line":135}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"213","location":{"end":{"column":78,"line":135},"start":{"column":37,"line":135}},"mutatorName":"BinaryExpression","replacement":"'Could not fetch data for mode: ' - error","status":"NoCoverage"},{"id":"214","location":{"end":{"column":70,"line":135},"start":{"column":37,"line":135}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"168","location":{"end":{"column":58,"line":108},"start":{"column":54,"line":108}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"210","location":{"end":{"column":6,"line":136},"start":{"column":19,"line":134}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"209","location":{"end":{"column":30,"line":131},"start":{"column":25,"line":131}},"mutatorName":"BooleanSubstitution","replacement":"true","status":"Survived"},{"id":"208","location":{"end":{"column":61,"line":131},"start":{"column":16,"line":131}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"216","location":{"end":{"column":42,"line":149},"start":{"column":9,"line":149}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"218","location":{"end":{"column":42,"line":149},"start":{"column":9,"line":149}},"mutatorName":"BinaryExpression","replacement":"typeof name !== 'string' && !name","status":"Survived"},{"id":"220","location":{"end":{"column":33,"line":149},"start":{"column":9,"line":149}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"169","location":{"end":{"column":6,"line":111},"start":{"column":65,"line":108}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"170","location":{"end":{"column":49,"line":110},"start":{"column":14,"line":110}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"224","location":{"end":{"column":6,"line":151},"start":{"column":44,"line":149}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"225","location":{"end":{"column":69,"line":150},"start":{"column":15,"line":150}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"226","location":{"end":{"column":28,"line":150},"start":{"column":24,"line":150}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"227","location":{"end":{"column":67,"line":150},"start":{"column":38,"line":150}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"228","location":{"end":{"column":38,"line":152},"start":{"column":9,"line":152}},"mutatorName":"IfStatement","replacement":"false","status":"Survived"},{"id":"171","location":{"end":{"column":28,"line":110},"start":{"column":23,"line":110}},"mutatorName":"BooleanSubstitution","replacement":"true","status":"Killed"},{"id":"230","location":{"end":{"column":38,"line":152},"start":{"column":9,"line":152}},"mutatorName":"BinaryExpression","replacement":"typeof ip !== 'string' && !ip","status":"Survived"},{"id":"217","location":{"end":{"column":42,"line":149},"start":{"column":9,"line":149}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"219","location":{"end":{"column":33,"line":149},"start":{"column":9,"line":149}},"mutatorName":"BinaryExpression","replacement":"typeof name === 'string'","status":"Killed"},{"id":"221","location":{"end":{"column":33,"line":149},"start":{"column":9,"line":149}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"232","location":{"end":{"column":31,"line":152},"start":{"column":9,"line":152}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"222","location":{"end":{"column":33,"line":149},"start":{"column":25,"line":149}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"236","location":{"end":{"column":6,"line":154},"start":{"column":40,"line":152}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"237","location":{"end":{"column":69,"line":153},"start":{"column":15,"line":153}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"238","location":{"end":{"column":28,"line":153},"start":{"column":24,"line":153}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"NoCoverage"},{"id":"239","location":{"end":{"column":67,"line":153},"start":{"column":38,"line":153}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"NoCoverage"},{"id":"223","location":{"end":{"column":42,"line":149},"start":{"column":37,"line":149}},"mutatorName":"PrefixUnaryExpression","replacement":"name","status":"Killed"},{"id":"240","location":{"end":{"column":39,"line":156},"start":{"column":18,"line":156}},"mutatorName":"BinaryExpression","replacement":"name.indexOf('_') >= 0","status":"Survived"},{"id":"229","location":{"end":{"column":38,"line":152},"start":{"column":9,"line":152}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"215","location":{"end":{"column":4,"line":174},"start":{"column":28,"line":146}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"231","location":{"end":{"column":31,"line":152},"start":{"column":9,"line":152}},"mutatorName":"BinaryExpression","replacement":"typeof ip === 'string'","status":"Killed"},{"id":"233","location":{"end":{"column":31,"line":152},"start":{"column":9,"line":152}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"234","location":{"end":{"column":31,"line":152},"start":{"column":23,"line":152}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"235","location":{"end":{"column":38,"line":152},"start":{"column":35,"line":152}},"mutatorName":"PrefixUnaryExpression","replacement":"ip","status":"Killed"},{"id":"241","location":{"end":{"column":39,"line":156},"start":{"column":18,"line":156}},"mutatorName":"BinaryExpression","replacement":"name.indexOf('_') <= 0","status":"Killed"},{"id":"242","location":{"end":{"column":39,"line":156},"start":{"column":18,"line":156}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"243","location":{"end":{"column":39,"line":156},"start":{"column":18,"line":156}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"244","location":{"end":{"column":34,"line":156},"start":{"column":31,"line":156}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"245","location":{"end":{"column":52,"line":156},"start":{"column":42,"line":156}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"253","location":{"end":{"column":20,"line":160},"start":{"column":15,"line":160}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"246","location":{"end":{"column":57,"line":156},"start":{"column":55,"line":156}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Killed"},{"id":"247","location":{"end":{"column":6,"line":161},"start":{"column":23,"line":158}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"248","location":{"end":{"column":39,"line":159},"start":{"column":12,"line":159}},"mutatorName":"BinaryExpression","replacement":"'http://' + ip + '/' - page","status":"Killed"},{"id":"256","location":{"end":{"column":73,"line":165},"start":{"column":9,"line":165}},"mutatorName":"BinaryExpression","replacement":"result !== 'undefined' && result && !result.error || result.data","status":"Survived"},{"id":"255","location":{"end":{"column":73,"line":165},"start":{"column":9,"line":165}},"mutatorName":"IfStatement","replacement":"true","status":"Survived"},{"id":"257","location":{"end":{"column":58,"line":165},"start":{"column":9,"line":165}},"mutatorName":"BinaryExpression","replacement":"result !== 'undefined' && result || !result.error","status":"Survived"},{"id":"259","location":{"end":{"column":58,"line":165},"start":{"column":9,"line":165}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"260","location":{"end":{"column":41,"line":165},"start":{"column":9,"line":165}},"mutatorName":"BinaryExpression","replacement":"result !== 'undefined' || result","status":"Survived"},{"id":"250","location":{"end":{"column":26,"line":159},"start":{"column":12,"line":159}},"mutatorName":"BinaryExpression","replacement":"'http://' - ip","status":"Killed"},{"id":"249","location":{"end":{"column":32,"line":159},"start":{"column":12,"line":159}},"mutatorName":"BinaryExpression","replacement":"'http://' + ip - '/'","status":"Killed"},{"id":"262","location":{"end":{"column":41,"line":165},"start":{"column":9,"line":165}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"265","location":{"end":{"column":31,"line":165},"start":{"column":9,"line":165}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"266","location":{"end":{"column":31,"line":165},"start":{"column":20,"line":165}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"251","location":{"end":{"column":21,"line":159},"start":{"column":12,"line":159}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"252","location":{"end":{"column":32,"line":159},"start":{"column":29,"line":159}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"254","location":{"end":{"column":73,"line":165},"start":{"column":9,"line":165}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"270","location":{"end":{"column":6,"line":173},"start":{"column":10,"line":171}},"mutatorName":"Block","replacement":"{}","status":"Survived"},{"id":"271","location":{"end":{"column":63,"line":172},"start":{"column":23,"line":172}},"mutatorName":"BinaryExpression","replacement":"'Could not fetch page: ' - result.result","status":"Survived"},{"id":"272","location":{"end":{"column":47,"line":172},"start":{"column":23,"line":172}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"258","location":{"end":{"column":58,"line":165},"start":{"column":9,"line":165}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"261","location":{"end":{"column":41,"line":165},"start":{"column":9,"line":165}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"263","location":{"end":{"column":31,"line":165},"start":{"column":9,"line":165}},"mutatorName":"BinaryExpression","replacement":"result === 'undefined'","status":"Killed"},{"id":"264","location":{"end":{"column":31,"line":165},"start":{"column":9,"line":165}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"267","location":{"end":{"column":58,"line":165},"start":{"column":45,"line":165}},"mutatorName":"PrefixUnaryExpression","replacement":"result.error","status":"Killed"},{"id":"278","location":{"end":{"column":33,"line":183},"start":{"column":9,"line":183}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"268","location":{"end":{"column":6,"line":170},"start":{"column":75,"line":165}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"269","location":{"end":{"column":40,"line":167},"start":{"column":31,"line":167}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"273","location":{"end":{"column":4,"line":203},"start":{"column":26,"line":181}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"274","location":{"end":{"column":42,"line":183},"start":{"column":9,"line":183}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"275","location":{"end":{"column":42,"line":183},"start":{"column":9,"line":183}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"277","location":{"end":{"column":33,"line":183},"start":{"column":9,"line":183}},"mutatorName":"BinaryExpression","replacement":"typeof name === 'string'","status":"Killed"},{"id":"276","location":{"end":{"column":42,"line":183},"start":{"column":9,"line":183}},"mutatorName":"BinaryExpression","replacement":"typeof name !== 'string' && !name","status":"Killed"},{"id":"279","location":{"end":{"column":33,"line":183},"start":{"column":9,"line":183}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"280","location":{"end":{"column":33,"line":183},"start":{"column":25,"line":183}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"281","location":{"end":{"column":42,"line":183},"start":{"column":37,"line":183}},"mutatorName":"PrefixUnaryExpression","replacement":"name","status":"Killed"},{"id":"282","location":{"end":{"column":6,"line":185},"start":{"column":44,"line":183}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"290","location":{"end":{"column":31,"line":186},"start":{"column":9,"line":186}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"283","location":{"end":{"column":69,"line":184},"start":{"column":15,"line":184}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"284","location":{"end":{"column":28,"line":184},"start":{"column":24,"line":184}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"Killed"},{"id":"285","location":{"end":{"column":67,"line":184},"start":{"column":38,"line":184}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"286","location":{"end":{"column":38,"line":186},"start":{"column":9,"line":186}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"287","location":{"end":{"column":38,"line":186},"start":{"column":9,"line":186}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"288","location":{"end":{"column":38,"line":186},"start":{"column":9,"line":186}},"mutatorName":"BinaryExpression","replacement":"typeof ip !== 'string' && !ip","status":"Killed"},{"id":"289","location":{"end":{"column":31,"line":186},"start":{"column":9,"line":186}},"mutatorName":"BinaryExpression","replacement":"typeof ip === 'string'","status":"Killed"},{"id":"291","location":{"end":{"column":31,"line":186},"start":{"column":9,"line":186}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"292","location":{"end":{"column":31,"line":186},"start":{"column":23,"line":186}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"293","location":{"end":{"column":38,"line":186},"start":{"column":35,"line":186}},"mutatorName":"PrefixUnaryExpression","replacement":"ip","status":"Killed"},{"id":"295","location":{"end":{"column":69,"line":187},"start":{"column":15,"line":187}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"294","location":{"end":{"column":6,"line":188},"start":{"column":40,"line":186}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"303","location":{"end":{"column":77,"line":192},"start":{"column":11,"line":192}},"mutatorName":"BinaryExpression","replacement":"(typeof msgResult === 'undefined' || !msgResult) && msgResult === ''","status":"Survived"},{"id":"296","location":{"end":{"column":28,"line":187},"start":{"column":24,"line":187}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"Killed"},{"id":"304","location":{"end":{"column":57,"line":192},"start":{"column":11,"line":192}},"mutatorName":"BinaryExpression","replacement":"typeof msgResult === 'undefined' && !msgResult","status":"Survived"},{"id":"305","location":{"end":{"column":57,"line":192},"start":{"column":11,"line":192}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"297","location":{"end":{"column":67,"line":187},"start":{"column":38,"line":187}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"308","location":{"end":{"column":43,"line":192},"start":{"column":11,"line":192}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"298","location":{"end":{"column":6,"line":199},"start":{"column":9,"line":189}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"310","location":{"end":{"column":43,"line":192},"start":{"column":32,"line":192}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"299","location":{"end":{"column":43,"line":191},"start":{"column":33,"line":191}},"mutatorName":"BinaryExpression","replacement":"'#' - name","status":"Killed"},{"id":"300","location":{"end":{"column":36,"line":191},"start":{"column":33,"line":191}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"313","location":{"end":{"column":77,"line":192},"start":{"column":61,"line":192}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"301","location":{"end":{"column":77,"line":192},"start":{"column":11,"line":192}},"mutatorName":"IfStatement","replacement":"false","status":"Killed"},{"id":"315","location":{"end":{"column":77,"line":192},"start":{"column":75,"line":192}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"302","location":{"end":{"column":77,"line":192},"start":{"column":11,"line":192}},"mutatorName":"IfStatement","replacement":"true","status":"Killed"},{"id":"307","location":{"end":{"column":43,"line":192},"start":{"column":11,"line":192}},"mutatorName":"BinaryExpression","replacement":"typeof msgResult !== 'undefined'","status":"Killed"},{"id":"306","location":{"end":{"column":57,"line":192},"start":{"column":11,"line":192}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"309","location":{"end":{"column":43,"line":192},"start":{"column":11,"line":192}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"311","location":{"end":{"column":57,"line":192},"start":{"column":47,"line":192}},"mutatorName":"PrefixUnaryExpression","replacement":"msgResult","status":"Killed"},{"id":"312","location":{"end":{"column":77,"line":192},"start":{"column":61,"line":192}},"mutatorName":"BinaryExpression","replacement":"msgResult !== ''","status":"Killed"},{"id":"314","location":{"end":{"column":77,"line":192},"start":{"column":61,"line":192}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"317","location":{"end":{"column":65,"line":193},"start":{"column":16,"line":193}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"316","location":{"end":{"column":8,"line":194},"start":{"column":79,"line":192}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"319","location":{"end":{"column":53,"line":193},"start":{"column":39,"line":193}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"318","location":{"end":{"column":29,"line":193},"start":{"column":25,"line":193}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"Killed"},{"id":"320","location":{"end":{"column":8,"line":198},"start":{"column":12,"line":195}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"321","location":{"end":{"column":61,"line":197},"start":{"column":16,"line":197}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"322","location":{"end":{"column":30,"line":197},"start":{"column":25,"line":197}},"mutatorName":"BooleanSubstitution","replacement":"true","status":"Killed"},{"id":"323","location":{"end":{"column":6,"line":202},"start":{"column":19,"line":200}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"324","location":{"end":{"column":71,"line":201},"start":{"column":14,"line":201}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"325","location":{"end":{"column":27,"line":201},"start":{"column":23,"line":201}},"mutatorName":"BooleanSubstitution","replacement":"false","status":"Killed"},{"id":"326","location":{"end":{"column":69,"line":201},"start":{"column":37,"line":201}},"mutatorName":"BinaryExpression","replacement":"'Could not fetch data: ' - error","status":"Killed"},{"id":"327","location":{"end":{"column":61,"line":201},"start":{"column":37,"line":201}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"}],"source":"'use strict';\n/*\nKomfovent library for integration with Komfovent units using C6 controller\nBased on reverse engineering of web interface ajax calls, not modbus/bacnet even though supported by the unit.\nLook at reverse.md for considerations on that design and further details on how stuff works.\nAll method stateless, no shared global variables in the class\n\nPublic functions returns standard json objects with result and error fields, originally made to simplify usage in nodered. \nPrivate functions does not, they throw. All functions are async\n*/\n\nmodule.exports = class Komfovent {\n  // create at new instance of the class, connected to chosen unit. Remove if ending up useless...\n  constructor () {\n    const mode = {\n      home: '3=2',\n      away: '3=1',\n      auto: '285=2',\n      intensive: '3=3',\n      boost: '3=4',\n      fireplace: '283',\n      kitchen: '282'\n    };\n  } // constructor end\n\n  /* private makeRequest()\n  * * generic methog to make the http calls using axios\n  * TODO make private function, throw instead of return objects for the flow\n  * @param postConfig The config object, axios standard, to make the request.\n  */\n  async makeRequest (postConfig) {\n    // Make a request for logon\n    const request = require('axios');\n    try {\n      const result = await request(postConfig);\n      return result;\n    }\n    catch (err) {\n      if (err.errno === 'ENOTFOUND' || err.errno === 'EHOSTDOWN') {\n        return { error: true, result: err };\n      }\n      else {\n        return { error: true, result: err };\n      }\n    } // catch error end\n  }\n\n  /* public logon()\n  * * function to logon initally\n  * TODO: improving detection of logged in state and errors by screenscraping\n  * @param username Komfovent username to logon\n  * @param password Password for the same user\n  * @param ip for the komfovent unit in question\n  */\n  async logon (username, password, ip) {\n    // validate input\n    if (typeof username !== 'string' || !username || typeof password !== 'string' || !password) {\n      return ({ error: true, result: 'Empty username/password received, quitting' });\n    }\n    if (typeof ip !== 'string' || !ip) {\n      return ({ error: true, result: 'Empty IP received, quitting' });\n    }\n    const postConfig = {\n      url: 'http://' + ip,\n      method: 'POST',\n      body: '1=' + username + '&' + '2=' + password\n    };\n    const result = await this.makeRequest(postConfig);\n    // check that we are actually logged on\n    if (result === 'undefined' || result === '') {\n      return { error: true, result: 'http request failed' };\n    }\n    else if (result.data.indexOf('Incorrect password!') >= 0 || result.status > 200) {\n      return { error: true, result: 'Wrong password for unit' };\n    }\n    else if (result.data.indexOf('value=\"Logout') >= 0 && result.status === 200) {\n      // then assume we are logged on correctly\n      return { error: false, result: 'logged on' };\n    }\n    else {\n      // seems like something unknown failed, the beauty of screenscraping\n      return { error: true, result: 'Something totally unknown happened with logon' };\n    }\n  }// logon end\n\n  /* public etMode()\n  * * function to set a mode on the logged on unit. Will not work, but not fail, if not logged on first\n  * TODO: future validation that the actual mode was set ok. Better error flow. check what device returns for bad modes\n  * @param mode Input object mode{name: 'auto', code: '285=2'}, where code is the values Komfovent expects\n  * @param ip address of the komfovent unit to set mode on\n  */\n  async setMode (mode, ip) {\n    // validate input\n    if (typeof mode.code !== 'string' || !mode) {\n      return ({ error: true, result: 'Empty mode received, quitting' });\n    }\n    if (typeof ip !== 'string' || !ip) {\n      return ({ error: true, result: 'Empty IP received, quitting' });\n    }\n    // defining message needed by c6 to switch modes\n    const postConfig = {\n      url: 'http://' + ip + '/ajax.xml',\n      method: 'POST',\n      body: mode.code\n    };\n    // make request for mode change\n    const result = await this.makeRequest(postConfig);\n    if (result.status === 200 && result.data.indexOf('c6') > 0) {\n      // then assuming it was ok, right http and the weird standard body response from C6 controller\n      return { error: false, result: mode.name };\n    }\n    else {\n      return { error: true, result: 'Could not set mode. Non existing? ' + mode.name };\n    }\n  } // setmode end\n\n  // function to fetch mode\n  async getMode (ip) {\n    if (typeof ip !== 'string' || !ip) {\n      return ({ error: true, result: 'Empty IP received, quitting' });\n    }\n    try {\n      const scraped = await this.getData('data', ip);\n      const msgResult = scraped('.controlh-1').attr('data-selected', '1').text(); // .attr('data-selected');\n      console.dir(msgResult);\n      if (typeof msgResult === 'undefined' || !msgResult) {\n        return { error: true, result: 'Active mode not found', unit: ip };\n      }\n      else {\n        // seems like we got the data without errors\n        return { error: false, result: msgResult, unit: ip };\n      }\n    }\n    catch (error) {\n      return { error: true, result: 'Could not fetch data for mode: ' + error };\n    }\n  } // getMode end\n\n  /* private getData()\n  * * private function to fetch data from the different komfovent views\n  * TODO\n  * @param name Name of the datafield to fetch. IDs defined in C6 web setup, documented in README and reverse.md\n  * @param ip IP address of the unit to fetch from\n  * @return cherio object for query of scraped content\n  */\n  async getData (name, ip) {\n    // validate input\n    // validate input\n    if (typeof name !== 'string' || !name) {\n      return ({ error: true, result: 'Empty ID received, quitting' });\n    }\n    if (typeof ip !== 'string' || !ip) {\n      return ({ error: true, result: 'Empty IP received, quitting' });\n    }\n    // change target to subpage if identity/name\n    const page = name.indexOf('_') > 0 ? 'det.html' : '';\n    // setup for get request\n    const getConfig = {\n      url: 'http://' + ip + '/' + page,\n      method: 'GET'\n    };\n    // get the page and scrape it\n    const result = await this.makeRequest(getConfig);\n    // validate results before parsing\n    if (result !== 'undefined' && result && !result.error && result.data) {\n      // load scraper and scrape recieved content\n      const scraper = require('cheerio');\n      const scraped = scraper.load(result.data);\n      return scraped;\n    }\n    else {\n      throw new Error('Could not fetch page: ' + result.result);\n    }\n  } // getData end\n\n  /* public getId()\n  * * public function to fetch the different data id values from the web pages\n  * TODO\n  * @param Name of the datafield to fetch. IDs defined in C6 web setup, documented in README and reverse.md\n  */\n  async getId (name, ip) {\n    // validate input\n    if (typeof name !== 'string' || !name) {\n      return ({ error: true, result: 'Empty ID received, quitting' });\n    }\n    if (typeof ip !== 'string' || !ip) {\n      return ({ error: true, result: 'Empty IP received, quitting' });\n    }\n    try {\n      const scraped = await this.getData(name, ip);\n      const msgResult = scraped('#' + name).text().trim();\n      if (typeof msgResult === 'undefined' || !msgResult || msgResult === '') {\n        return { error: true, result: 'ID not found', unit: ip };\n      }\n      else {\n      // seems like we got the data without errors\n        return { error: false, result: msgResult, unit: ip };\n      }\n    }\n    catch (error) {\n      return { error: true, result: 'Could not fetch data: ' + error };\n    }\n  } // getId end\n};\n"}},"schemaVersion":"1.0","thresholds":{"break":null,"high":80,"low":60}};